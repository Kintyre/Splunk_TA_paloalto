[mm_indicators]
description = Retrieve all MineMeld indicators, formatting the time and moving the "value" namespace up a level for brevity's sake.
definition = inputlookup minemeldfeeds_lookup \
    | rename value.* AS * \
    | fieldformat first_seen=strftime('first_seen' / 1000, "%c") \
    | fieldformat last_seen=strftime('last_seen' / 1000, "%c") \
    | fieldformat autofocus_create_date=strftime('autofocus_create_date' / 1000, "%c")

[mm_indicators(1)]
description = Retrieve all MineMeld indicators of the given type, formatting the time and moving the "value" namespace up a level for brevity's sake.
args = type
definition = `mm_indicators` | search type="$type$"

[mm_stats]
description = Get the stats for indicator retrieval from MineMeld feeds.
definition = sourcetype="minemeld"

[mm_es_gen(1)]
description = Shared base for generating Splunk Enterprise Security threatlists.
args = type
definition = `mm_indicators($type$)` \
    | fillnull value=NULL autofocus_tags autofocus_grayware autofocus_malware confidence share_level \
    | eval af_tags=if(autofocus_tags == NULL, "", " autofocus_tags:" .mvjoin(autofocus_tags, ",")) \
    | eval af_grayware=if(autofocus_grayware == NULL, "", " autofocus_grayware:" .autofocus_grayware) \
    | eval af_malware=if(autofocus_malware == NULL, "", " autofocus_malware:" . autofocus_malware) \
    | eval feed_confidence=if(confidence == NULL, "", " confidence:" . confidence) \
    | eval feed_share_level=if(share_level == NULL, "", " share_level:" . share_level) \
    | eval description="MineMeld feed:" .splunk_source . feed_share_level . feed_confidence . af_grayware . af_malware . af_tags \
    | eval weight=case(share_level == "green", 0, share_level == "yellow", 1, share_level == "amber", 1, share_level == "red", 2)
